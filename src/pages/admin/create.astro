---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
---

<!doctype html>
<html lang="pt-br">
	<head>
		<BaseHead title={`Criar Post - Admin - ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
		<!-- TinyMCE ser√° carregado via CDN -->
		<script is:inline src="https://cdn.jsdelivr.net/npm/tinymce@7/tinymce.min.js"></script>
		<script is:inline src="https://unpkg.com/turndown/dist/turndown.js"></script>
		<style>
			.admin-container {
				max-width: 800px;
				margin: 0 auto;
				padding: 2rem;
			}
			
			.admin-header {
				display: flex;
				justify-content: space-between;
				align-items: center;
				margin-bottom: 2rem;
				padding-bottom: 1rem;
				border-bottom: 2px solid #e1e5e9;
			}
			
			.admin-title {
				font-size: 2rem;
				font-weight: bold;
				color: #2c3e50;
			}
			
			.btn {
				display: inline-block;
				padding: 0.75rem 1.5rem;
				border-radius: 8px;
				text-decoration: none;
				font-weight: 600;
				transition: all 0.3s ease;
				border: none;
				cursor: pointer;
			}
			
			.btn-secondary {
				background: #f8f9fa;
				color: #495057;
				border: 1px solid #dee2e6;
			}
			
			.btn-secondary:hover {
				background: #e9ecef;
			}
			
			.btn-primary {
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				color: white;
			}
			
			.btn-primary:hover {
				transform: translateY(-2px);
				box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
			}
			
			.form-container {
				background: white;
				border-radius: 12px;
				padding: 2rem;
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
				border: 1px solid #e1e5e9;
			}
			
			.form-group {
				margin-bottom: 1.5rem;
			}
			
			.form-label {
				display: block;
				margin-bottom: 0.5rem;
				font-weight: 600;
				color: #2c3e50;
			}
			
			.form-input {
				width: 100%;
				padding: 0.75rem;
				border: 1px solid #dee2e6;
				border-radius: 6px;
				font-size: 1rem;
				transition: border-color 0.3s ease;
			}
			
			.form-input:focus {
				outline: none;
				border-color: #667eea;
				box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
			}
			
			.form-textarea {
				min-height: 400px;
				font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
				resize: vertical;
				line-height: 1.6;
				font-size: 14px;
			}
			
			.form-actions {
				display: flex;
				gap: 1rem;
				justify-content: flex-end;
				margin-top: 2rem;
			}
			
			.loading {
				opacity: 0.6;
				pointer-events: none;
			}
			
			.error-message {
				background: #f8d7da;
				color: #721c24;
				padding: 0.75rem;
				border-radius: 6px;
				margin-bottom: 1rem;
				border: 1px solid #f5c6cb;
			}
			
			.success-message {
				background: #d4edda;
				color: #155724;
				padding: 0.75rem;
				border-radius: 6px;
				margin-bottom: 1rem;
				border: 1px solid #c3e6cb;
			}
			
			.help-text {
				font-size: 0.875rem;
				color: #6c757d;
				margin-top: 0.25rem;
			}

			/* TinyMCE Customization */
			#tinymce-container {
				border: 1px solid #dee2e6;
				border-radius: 6px;
				overflow: hidden;
			}

			.tox .tox-editor-header {
				border-bottom: 1px solid #dee2e6 !important;
			}

			.tox-tinymce {
				border: none !important;
				border-radius: 6px !important;
			}
			


			

			

		</style>
	</head>
	<body>
		<Header />
		<main>
			<div class="admin-container">
				<div class="admin-header">
					<h1 class="admin-title">Criar Novo Post</h1>
					<div style="display: flex; gap: 0.5rem;">
						<a href="/admin/editor-guide" class="btn btn-secondary">
							üìñ Guia
						</a>
						<a href="/admin" class="btn btn-secondary">
							‚Üê Voltar ao Admin
						</a>
					</div>
				</div>
				
				<div class="form-container">
					<div id="message-container"></div>
					
					<form id="create-form">
						<div class="form-group">
							<label for="title" class="form-label">T√≠tulo *</label>
							<input
								type="text"
								id="title"
								name="title"
								class="form-input"
								required
								placeholder="Digite o t√≠tulo do post"
							/>
						</div>
						
						<div class="form-group">
							<label for="description" class="form-label">Descri√ß√£o *</label>
							<input
								type="text"
								id="description"
								name="description"
								class="form-input"
								required
								placeholder="Breve descri√ß√£o do post"
							/>
							<div class="help-text">
								Esta descri√ß√£o aparecer√° nas meta tags e listagem de posts
							</div>
						</div>
						
						<div class="form-group">
							<label for="pubDate" class="form-label">Data de Publica√ß√£o *</label>
							<input
								type="date"
								id="pubDate"
								name="pubDate"
								class="form-input"
								required
							/>
						</div>
						
						<div class="form-group">
							<label for="heroImage" class="form-label">Imagem de Destaque</label>
							<input
								type="text"
								id="heroImage"
								name="heroImage"
								class="form-input"
								placeholder="../../assets/blog-placeholder-1.jpg"
							/>
							<div class="help-text">
								Caminho relativo para a imagem (opcional)
							</div>
						</div>
						
														<div class="form-group">
			<label for="content" class="form-label">Conte√∫do *</label>
			
			<div id="tinymce-container">
				<textarea
					id="content"
					name="content"
					required
					placeholder="Digite o conte√∫do do post..."
				></textarea>
			</div>
			<div class="help-text">
				Use a barra de ferramentas do editor para formata√ß√£o visual. O conte√∫do ser√° convertido automaticamente para Markdown.
			</div>
		</div>
						
						<div class="form-actions">
							<button type="button" id="preview-btn" class="btn btn-secondary">
								Visualizar
							</button>
							<button type="submit" class="btn btn-primary">
								Criar Post
							</button>
						</div>
					</form>
				</div>
			</div>
		</main>
		<Footer />
		

		<script>
			// Definir data atual como padr√£o
			document.getElementById('pubDate').valueAsDate = new Date();
			
			// Inicializar conversor HTML -> Markdown
			const turndownService = new TurndownService({
				codeBlockStyle: 'fenced',
				headingStyle: 'atx',
				emDelimiter: '*',
				strongDelimiter: '**'
			});
			
			// Configurar regras customizadas do Turndown
			turndownService.addRule('strikethrough', {
				filter: ['s', 'strike', 'del'],
				replacement: function(content) {
					return '~~' + content + '~~';
				}
			});
			
			// Vari√°vel para armazenar inst√¢ncia do TinyMCE
			let editor = null;
			
			// Inicializar TinyMCE
			tinymce.init({
				selector: '#content',
				height: 500,
				menubar: false,
				branding: false,
				promotion: false,
				plugins: [
					'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',
					'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',
					'insertdatetime', 'media', 'table', 'help', 'wordcount', 'codesample'
				],
				toolbar: 'undo redo | styles | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image media table | codesample blockquote hr | preview code fullscreen | help',
				toolbar_mode: 'sliding',
				block_formats: 'Par√°grafo=p; T√≠tulo 1=h1; T√≠tulo 2=h2; T√≠tulo 3=h3; T√≠tulo 4=h4; T√≠tulo 5=h5; T√≠tulo 6=h6; Cita√ß√£o=blockquote; C√≥digo=pre',
				content_style: `
					body { 
						font-family: system-ui, sans-serif; 
						font-size: 16px; 
						line-height: 1.6; 
						color: #333; 
						max-width: none; 
						margin: 0; 
						padding: 20px; 
					}
					h1, h2, h3, h4, h5, h6 { 
						color: #2c3e50; 
						margin-top: 1.5em; 
						margin-bottom: 0.5em; 
					}
					blockquote { 
						border-left: 4px solid #667eea; 
						padding-left: 1rem; 
						margin: 1rem 0; 
						font-style: italic; 
						color: #666; 
					}
					pre { 
						background: #f8f9fa; 
						padding: 1rem; 
						border-radius: 6px; 
						overflow-x: auto; 
						border: 1px solid #e9ecef; 
					}
					code { 
						background: #f8f9fa; 
						padding: 0.2rem 0.4rem; 
						border-radius: 3px; 
						font-family: 'Courier New', monospace; 
					}
					table { 
						border-collapse: collapse; 
						width: 100%; 
						margin: 1rem 0; 
					}
					table th, table td { 
						border: 1px solid #dee2e6; 
						padding: 0.75rem; 
						text-align: left; 
					}
					table th { 
						background: #f8f9fa; 
						font-weight: 600; 
					}
				`,
				language: 'pt_BR',
				setup: function(ed) {
					editor = ed;
				},
				init_instance_callback: function(ed) {
					editor = ed;
				}
			});
			
			// Formul√°rio de cria√ß√£o
			document.getElementById('create-form').addEventListener('submit', async (e) => {
				e.preventDefault();
				
				const form = e.target;
				const messageContainer = document.getElementById('message-container');
				const submitBtn = form.querySelector('button[type="submit"]');
				
				// Loading state
				form.classList.add('loading');
				submitBtn.textContent = 'Criando...';
				messageContainer.innerHTML = '';
				
				try {
					const formData = new FormData(form);
					// Obter conte√∫do HTML do TinyMCE e converter para Markdown
					const htmlContent = editor ? editor.getContent() : '';
					const markdownContent = turndownService.turndown(htmlContent);
					
					const data = {
						title: formData.get('title'),
						description: formData.get('description'),
						pubDate: formData.get('pubDate'),
						heroImage: formData.get('heroImage') || undefined,
						content: markdownContent
					};
					
					const response = await fetch('/api/posts', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify(data)
					});
					
					if (response.ok) {
						const result = await response.json();
						messageContainer.innerHTML = `
							<div class="success-message">
								Post criado com sucesso! Redirecionando...
							</div>
						`;
						
						setTimeout(() => {
							window.location.href = '/admin';
						}, 1500);
					} else {
						const error = await response.json();
						throw new Error(error.message || 'Erro ao criar post');
					}
				} catch (error) {
					messageContainer.innerHTML = `
						<div class="error-message">
							Erro: ${error.message}
						</div>
					`;
				} finally {
					form.classList.remove('loading');
					submitBtn.textContent = 'Criar Post';
				}
			});
			
			// Bot√£o de preview
			document.getElementById('preview-btn').addEventListener('click', () => {
				const title = document.getElementById('title').value;
				const htmlContent = editor ? editor.getContent() : '';
				
				if (!title || !htmlContent) {
					alert('Preencha pelo menos o t√≠tulo e conte√∫do para visualizar');
					return;
				}
				
				// Abrir preview em nova aba com o conte√∫do HTML
				const previewWindow = window.open('', '_blank');
				previewWindow.document.write(`
					<html>
						<head>
							<title>Preview: ${title}</title>
							<meta charset="UTF-8">
							<style>
								body { 
									max-width: 800px; 
									margin: 0 auto; 
									padding: 2rem; 
									font-family: system-ui, sans-serif; 
									line-height: 1.6; 
									color: #333;
								}
								h1, h2, h3, h4, h5, h6 { 
									color: #2c3e50; 
									margin-top: 1.5em; 
									margin-bottom: 0.5em; 
								}
								h1 { font-size: 2rem; }
								h2 { font-size: 1.75rem; }
								h3 { font-size: 1.5rem; }
								blockquote { 
									border-left: 4px solid #667eea; 
									padding-left: 1rem; 
									margin: 1rem 0; 
									font-style: italic; 
									color: #666; 
								}
								pre { 
									background: #f8f9fa; 
									padding: 1rem; 
									border-radius: 6px; 
									overflow-x: auto; 
									border: 1px solid #e9ecef; 
								}
								code { 
									background: #f8f9fa; 
									padding: 0.2rem 0.4rem; 
									border-radius: 3px; 
									font-family: 'Courier New', monospace; 
								}
								table { 
									border-collapse: collapse; 
									width: 100%; 
									margin: 1rem 0; 
								}
								table th, table td { 
									border: 1px solid #dee2e6; 
									padding: 0.75rem; 
									text-align: left; 
								}
								table th { 
									background: #f8f9fa; 
									font-weight: 600; 
								}
								img { 
									max-width: 100%; 
									height: auto; 
									border-radius: 6px; 
								}
							</style>
						</head>
						<body>
							<h1>${title}</h1>
							<div>${htmlContent}</div>
						</body>
					</html>
				`);
			});
		</script>
	</body>
</html>