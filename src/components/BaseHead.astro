---
// Import the global styles
import '../styles/tokens.css';
import '../styles/global.css';
import type { ImageMetadata } from 'astro';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import { SITE_TITLE } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	keywords?: string[];
	author?: string;
	publishDate?: Date;
	modifiedDate?: Date;
	articleType?: 'article' | 'website';
	noindex?: boolean;
	canonical?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
	title,
	description,
	image = FallbackImage,
	keywords = [],
	author = 'Astro Blog',
	publishDate,
	modifiedDate,
	articleType = 'website',
	noindex = false,
	canonical,
} = Astro.props;

// Gerar título completo
const fullTitle = title === SITE_TITLE ? title : `${title} | ${SITE_TITLE}`;

// URL canônica final
const finalCanonical = canonical ? new URL(canonical, Astro.site) : canonicalURL;

// Formato de data para Schema.org
const formatDate = (date: Date) => date.toISOString();
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="theme-color" content="#3b82f6" />
<meta name="color-scheme" content="light dark" />

<!-- Icons -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="apple-touch-icon" sizes="180x180" href="/favicon.svg" />

<!-- Feed e Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>

<!-- Generator -->
<meta name="generator" content={Astro.generator} />

<!-- Robots -->
{noindex && <meta name="robots" content="noindex, nofollow" />}

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- DNS prefetch para performance -->
<link rel="dns-prefetch" href="//fonts.googleapis.com" />

<!-- Canonical URL -->
<link rel="canonical" href={finalCanonical} />

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
{author && <meta name="author" content={author} />}
{keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={articleType} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />
<meta property="og:image:alt" content={`Imagem do artigo: ${title}`} />
<meta property="og:locale" content="pt_BR" />
<meta property="og:site_name" content={SITE_TITLE} />
{publishDate && <meta property="article:published_time" content={formatDate(publishDate)} />}
{modifiedDate && <meta property="article:modified_time" content={formatDate(modifiedDate)} />}
{author && <meta property="article:author" content={author} />}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={Astro.url} />
<meta name="twitter:title" content={fullTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image.src, Astro.url)} />
<meta name="twitter:image:alt" content={`Imagem do artigo: ${title}`} />

<!-- Schema.org Structured Data -->
<script type="application/ld+json">
{
	JSON.stringify({
		'@context': 'https://schema.org',
		'@type': articleType === 'article' ? 'BlogPosting' : 'WebSite',
		headline: title,
		description: description,
		image: new URL(image.src, Astro.url),
		author: {
			'@type': 'Person',
			name: author,
		},
		publisher: {
			'@type': 'Organization',
			name: SITE_TITLE,
		},
		url: Astro.url,
		...(publishDate && { datePublished: formatDate(publishDate) }),
		...(modifiedDate && { dateModified: formatDate(modifiedDate) }),
		mainEntityOfPage: {
			'@type': 'WebPage',
			'@id': Astro.url,
		},
	})
}
</script>
